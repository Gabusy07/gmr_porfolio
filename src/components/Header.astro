---
import { getLangFromUrl, useTranslations, useTranslatedPath } from "../i18n/utils";
import NavLinkCustom from "./NavLinkCustom.astro";
import { languages } from '../i18n/ui';



const currentLang = getLangFromUrl(Astro.url)
const translate = useTranslations(currentLang)
const translatePath = useTranslatedPath(currentLang);
---

<header
  class="border border-gray-100 rounded bg-opacity-75 transparent  text-black w-full bg-gray-200 p-4 lg:p-5"
>
  <div class="block md:flex items-end justify-between mx-2 md:mx-4">
    <div class="flex gap-x-5">
      <nav class="hidden sm:block sm:space-x-2 md:flex md:space-x-4">
        <NavLinkCustom linkName={translate('title.about')} href="#about">
          <Fragment slot="before">
            <img class="w-7" src="/info_FILL0_wght400_GRAD0_opsz24.svg" alt="" />
          </Fragment>
        </NavLinkCustom>
        <NavLinkCustom linkName={translate('title.lang')} href="#languages">
          <Fragment slot="before">
            <img class="w-7" src="/language.svg" alt="" />
          </Fragment>
        </NavLinkCustom>

        <NavLinkCustom linkName={translate('title.skill')} href="#skills">
          <Fragment slot="before">
            <img class="w-7" src="/person_check.svg" alt="" />
          </Fragment>
        </NavLinkCustom>

        <NavLinkCustom linkName={translate('title.project')} href="#projects">
          <Fragment slot="before">
            <img class="w-7" src="/construction.svg" alt="" />
          </Fragment>
        </NavLinkCustom>

        <NavLinkCustom linkName={translate('title.experience')} href="#experience">
          <Fragment slot="before">
            <img class="w-7" src="/work.svg" alt="" />
          </Fragment>
        </NavLinkCustom>

        <NavLinkCustom linkName={translate('nav.contact')} href="#contact-me">
          <Fragment slot="before">
            <img class="w-7" src="/contact.svg" alt="" />
          </Fragment>
        </NavLinkCustom>
      </nav>

     
    </div>

    <div class="float-right mt-auto sm:mt-3 flex gap-x-2">
      <div id="lenguage" class="dropdown">
        
        <span class="dropdown-item"> {translate('header.language')}</span>

          <ul class="dropdown-content rounded-lg">
            {Object.entries(languages)
              .filter(([label, lang]) => lang !== currentLang)
              .map(([label, lang]) => (
                  <li class="dropdown-item rounded">
                      <a href={translatePath('/', lang)}>{label}</a>
                  </li>
              ))
          }
          </ul>
        
      </div>
    </div>

    <!-- <div class="float-right mt-auto sm:mt-3">
      <div class="container__switch">
        <label class="switch">
          <input type="checkbox" id="toggleButton" />
          <span class="slider"></span>
        </label>
      </div>
    </div> -->
  </div>
</header>


<style>
  header {
    position: fixed;
    top: 0;
    left: 0;
    z-index: var(--z-priority);
  }
  .container__switch {
    text-align: center;
  }

  .switch {
    position: relative;
    display: inline-block;
    width: 3rem;
    height: 1.25rem;
  }

  .switch input {
    opacity: 0;
    width: 0;
    height: 0;
  }

  .slider {
    position: absolute;
    cursor: pointer;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-color: #ccc;
    transition: 0.4s;
    border-radius: 2rem;
  }

  .slider:before {
    position: absolute;
    content: "";
    height: 1.5rem;
    width: 1.5rem;
    left: 0px;
    bottom: 0px;
    background-color: white;
    transition: 0.4s;
    border-radius: 50%;
  }

  input:checked + .slider {
    background-color: #2196f3;
  }

  input:focus + .slider {
    box-shadow: 0 0 1px #2196f3;
  }

  input:checked + .slider:before {
    transform: translateX(1.5rem);
  }

  .dropdown {
    position: relative;
    display: inline-block;
    /* display: none; */
  }

  .dropdown-content {
    display: none;
    position: absolute;
    background-color: #f9f9f9;
    box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2);
    padding: 5px;
    z-index: var(--z-priority);
    min-width: 33px;
    opacity: 0.75;
    margin-top: 0.1rem;
  }

  .dropdown:hover .dropdown-content {
    display: block;
  }

  .dropdown-item {
    padding: 3px 10px;
    cursor: pointer;
    margin-top: 1rem;
    margin-bottom: 1rem;
    transition: background-color 0.3s;
  }

  .dropdown-item:hover {
    background-color: #ddd;
  }
</style>

